package com.devrachit.groww.data.remote.mappers

import com.devrachit.groww.data.remote.dto.CompanyDetailsDto
import com.devrachit.groww.domain.models.CompanyDetails

fun CompanyDetailsDto.toDomainModel(): CompanyDetails {
    return CompanyDetails(
        symbol = symbol,
        assetType = assetType,
        name = name,
        description = description,
        exchange = exchange,
        country = country,
        sector = sector,
        industry = industry,
        marketCapitalization = marketCapitalization,
        dividendDate = dividendDate,
        currency = currency,
        cik = cik,
        dividendYield = dividendYield,
        trailingPE = trailingPE,
        dividendPerShare = dividendPerShare,
        address = address,
        officialSite = officialSite,
        fiscalYearEnd = fiscalYearEnd,
        latestQuarter = latestQuarter,
        ebitda = ebitda,
        peRatio = peRatio,
        pegRatio = pegRatio,
        bookValue = bookValue,
        eps = eps,
        revenuePerShareTTM = revenuePerShareTTM,
        profitMargin = profitMargin,
        operatingMarginTTM = operatingMarginTTM,
        returnOnAssetsTTM = returnOnAssetsTTM,
        returnOnEquityTTM = returnOnEquityTTM,
        revenueTTM = revenueTTM,
        grossProfitTTM = grossProfitTTM,
        dilutedEPSTTM = dilutedEPSTTM,
        quarterlyEarningsGrowthYOY = quarterlyEarningsGrowthYOY,
        quarterlyRevenueGrowthYOY = quarterlyRevenueGrowthYOY,
        analystTargetPrice = analystTargetPrice,
        analystRatingStrongBuy = analystRatingStrongBuy,
        analystRatingBuy = analystRatingBuy,
        analystRatingHold = analystRatingHold,
        analystRatingSell = analystRatingSell,
        analystRatingStrongSell = analystRatingStrongSell,
        forwardPE = forwardPE,
        priceToSalesRatioTTM = priceToSalesRatioTTM,
        priceToBookRatio = priceToBookRatio,
        evToRevenue = evToRevenue,
        evToEBITDA = evToEBITDA,
        beta = beta,
        weekHigh52 = weekHigh52,
        weekLow52 = weekLow52,
        movingAverage50Day = movingAverage50Day,
        movingAverage200Day = movingAverage200Day,
        sharesOutstanding = sharesOutstanding,
        exDividendDate = exDividendDate
    )
}